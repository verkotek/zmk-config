#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y      &kp U                &kp I             &kp O                &mt LEFT_BRACKET P  &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H      &kp J                &kp K             &kp L                &mt SQT SEMICOLON   &trans
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N      &mt RIGHT_BRACKET M  &mt COMMA PERIOD  &mt BACKSLASH SLASH  &kp GRAVE           &kp K_PLAY_PAUSE
                              &kp LEFT_WIN  &to 1  &kp SPACE    &kp ENTER  &to 2                &kp LEFT_ALT
            >;
        };

        floor {
            bindings = <
&bt BT_CLR         &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp N6   &kp N7    &kp N8    &kp N9  &kp N0     &kp DELETE
&kp TAB            &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6   &kp F7    &kp F8    &kp F9  &kp F10    &kp K_MUTE
&kp C_VOLUME_DOWN  &trans  &trans  &trans  &trans  &kp F11    &kp F12  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp C_VOLUME_UP
                                   &trans  &trans  &trans     &trans   &trans    &trans
            >;
        };

        cheing {
            bindings = <
&msc SCRL_UP     &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_BRACKET LEFT_BRACKET  &kp PIPE  &mt UNDERSCORE MINUS    &kp HOME  &kp PG_DN          &kp PG_UP  &kp END  &trans  &trans
&msc SCRL_DOWN   &mt MINUS PLUS                          &mt SLASH ASTERISK          &mt EXCLAMATION EQUAL           &trans    &trans                  &kp SQT   &kp DOUBLE_QUOTES  &kp GRAVE  &trans   &trans  &trans
&kp PRINTSCREEN  &trans                                  &trans                      &trans                          &trans    &trans                  &trans    &trans             &trans     &trans   &trans  &trans
                                                                                     &trans                          &trans    &trans                  &trans    &trans             &trans
            >;
        };
    };
};
