/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        frontSlash {
            bindings = <&kp DELETE>;
            key-positions = <11 12>;
        };

        up {
            bindings = <&tog 1>;
            key-positions = <38 12>;
        };

        down {
            bindings = <&tog 2>;
            key-positions = <39 12>;
        };

        def {
            bindings = <&tog 0>;
            key-positions = <38 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&bt BT_CLR      &kp Q  &kp W  &kp F                  &kp P    &kp G        &kp J    &kp L      &kp U         &kp Y    &kp P                &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp R  &kp S                  &kp T    &kp D        &kp H    &kp N      &kp E         &kp I    &kp O                &mt RIGHT_BRACE LEFT_BRACE
&kp LCTRL       &kp Z  &kp X  &kp C                  &kp V    &kp B        &kp K    &kp M      &kp COMMA     &kp DOT  &mt SLASH BACKSLASH  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS
                              &mt LEFT_WIN LEFT_ALT  &kp TAB  &kp SPACE    &kp ESC  &kp ENTER  &mt HOME END
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4                         &kp N5     &kp N6    &kp N7           &kp N8    &kp N9     &kp N0        &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F4                         &kp F5     &kp LEFT  &kp DOWN         &kp UP    &kp RIGHT  &mt HOME END  &trans
&trans  &kp F6  &kp F7  &kp F8  &kp F9                         &kp F10    &kp F11   &kp F12          &trans    &trans     &trans        &trans
                        &tog 0  &mt C_VOLUME_UP C_VOLUME_DOWN  &trans     &trans    &kp PRINTSCREEN  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp QUESTION  &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans        &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                 &tog 0    &trans    &trans       &trans     &trans     &trans
            >;
        };
    };
};
